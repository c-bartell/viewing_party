---
http_interactions:
- request:
    method: get
    uri: https://api.themoviedb.org/3/search/movie?api_key=Not an API Key&include_adult=false&language=en-US&page=1&query=batman
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v1.0.1
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Thu, 10 Dec 2020 01:47:49 GMT
      Server:
      - openresty
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Allow-Methods:
      - GET, HEAD, POST, PUT, DELETE, OPTIONS
      Access-Control-Expose-Headers:
      - ETag, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, Retry-After,
        Content-Length, Content-Range
      Cache-Control:
      - public, max-age=600
      Vary:
      - Accept-Encoding
      X-Cache:
      - Hit from cloudfront
      Via:
      - 1.1 28d79637e27f11e3ab19a9515e273a5b.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - DEN50-C2
      X-Amz-Cf-Id:
      - 1rDiLtD45uqWJTdk33kLmSXD5SYD4DRiXLXyWPVzOp-d5AelHZZ_8Q==
      Age:
      - '2'
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Thu, 10 Dec 2020 01:47:51 GMT
- request:
    method: get
    uri: https://api.themoviedb.org/3/search/movie?api_key=Not an API Key&include_adult=false&language=en-US&page=2&query=batman
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v1.0.1
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Thu, 10 Dec 2020 01:47:49 GMT
      Server:
      - openresty
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Allow-Methods:
      - GET, HEAD, POST, PUT, DELETE, OPTIONS
      Access-Control-Expose-Headers:
      - ETag, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, Retry-After,
        Content-Length, Content-Range
      Cache-Control:
      - public, max-age=600
      Vary:
      - Accept-Encoding
      X-Cache:
      - Hit from cloudfront
      Via:
      - 1.1 6c02603f677dd5669f8ab3b41062340f.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - DEN50-C2
      X-Amz-Cf-Id:
      - IsaXbqJIK-_LSAE9IEl4SPkrvI22-ENwEtTZniMjS4t-Iyn98Gf-IA==
      Age:
      - '2'
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Thu, 10 Dec 2020 01:47:51 GMT
recorded_with: VCR 6.0.0
