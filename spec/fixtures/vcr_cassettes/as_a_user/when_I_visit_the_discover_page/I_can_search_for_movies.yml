---
http_interactions:
- request:
    method: get
    uri: https://api.themoviedb.org/3/search/movie?api_key=Not an API Key&include_adult=false&language=en-US&page=1&query=batman
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v1.0.1
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Wed, 09 Dec 2020 23:40:38 GMT
      Server:
      - openresty
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Allow-Methods:
      - GET, HEAD, POST, PUT, DELETE, OPTIONS
      Access-Control-Expose-Headers:
      - ETag, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, Retry-After,
        Content-Length, Content-Range
      Cache-Control:
      - public, max-age=600
      Vary:
      - Accept-Encoding
      X-Cache:
      - Hit from cloudfront
      Via:
      - 1.1 91f1c114eac2b00f07286bc49dddd7e5.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - DEN50-C2
      X-Amz-Cf-Id:
      - '09PreHKtKIxYKDhhtdErIBml83whQoMPQ9qgYVwZo9Hk2vTMMXx1Dw=='
      Age:
      - '1'
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        eyJwYWdlIjoxLCJyZXN1bHRzIjpbeyJhZHVsdCI6ZmFsc2UsImJhY2tkcm9wX3BhdGgiOiIva1U3Wml5ZVV3Y3BUa1lqM1VjeFNxR2RabXhZLmpwZyIsImdlbnJlX2lkcyI6WzE2LDI4XSwiaWQiOjYxODM1Mywib3JpZ2luYWxfbGFuZ3VhZ2UiOiJlbiIsIm9yaWdpbmFsX3RpdGxlIjoiQmF0bWFuOiBEZWF0aCBpbiB0aGUgRmFtaWx5Iiwib3ZlcnZpZXciOiJUcmFnZWR5IHN0cmlrZXMgdGhlIEJhdG1hbidzIGxpZmUgYWdhaW4gd2hlbiBSb2JpbiBKYXNvbiBUb2RkIHRyYWNrcyBkb3duIGhpcyBiaXJ0aCBtb3RoZXIgb25seSB0byBydW4gYWZvdWwgb2YgdGhlIEpva2VyLiBBbiBhZGFwdGF0aW9uIG9mIHRoZSAxOTg4IGNvbWljIGJvb2sgc3RvcnlsaW5lIG9mIHRoZSBzYW1lIG5hbWUuIiwicG9wdWxhcml0eSI6NDM1LjYwMywicG9zdGVyX3BhdGgiOiIvazhROXVseVJFOGZrdlpNa0FNOUxQWU1LY3RiLmpwZyIsInJlbGVhc2VfZGF0ZSI6IjIwMjAtMTAtMTMiLCJ0aXRsZSI6IkJhdG1hbjogRGVhdGggaW4gdGhlIEZhbWlseSIsInZpZGVvIjpmYWxzZSwidm90ZV9hdmVyYWdlIjo3LjIsInZvdGVfY291bnQiOjExNH0seyJhZHVsdCI6ZmFsc2UsImJhY2tkcm9wX3BhdGgiOiIvMnZhMzJhcFFQOTdndlV4YU1uTDV3WXQ0Q1JCLmpwZyIsImdlbnJlX2lkcyI6WzE0LDI4XSwiaWQiOjI2OCwib3JpZ2luYWxfbGFuZ3VhZ2UiOiJlbiIsIm9yaWdpbmFsX3RpdGxlIjoiQmF0bWFuIiwib3ZlcnZpZXciOiJIYXZpbmcgd2l0bmVzc2VkIGhpcyBwYXJlbnRzJyBicnV0YWwgbXVyZGVyIGFzIGEgY2hpbGQsIG1pbGxpb25haXJlIHBoaWxhbnRocm9waXN0IEJydWNlIFdheW5lIGZpZ2h0cyBjcmltZSBpbiBHb3RoYW0gQ2l0eSBkaXNndWlzZWQgYXMgQmF0bWFuLCBhIGNvc3R1bWVkIGhlcm8gd2hvIHN0cmlrZXMgZmVhciBpbnRvIHRoZSBoZWFydHMgb2YgdmlsbGFpbnMuIEJ1dCB3aGVuIGEgZGVmb3JtZWQgbWFkbWFuIHdobyBjYWxscyBoaW1zZWxmIFwiVGhlIEpva2VyXCIgc2VpemVzIGNvbnRyb2wgb2YgR290aGFtJ3MgY3JpbWluYWwgdW5kZXJ3b3JsZCwgQmF0bWFuIG11c3QgZmFjZSBoaXMgbW9zdCBydXRobGVzcyBuZW1lc2lzIGV2ZXIgd2hpbGUgcHJvdGVjdGluZyBib3RoIGhpcyBpZGVudGl0eSBhbmQgaGlzIGxvdmUgaW50ZXJlc3QsIHJlcG9ydGVyIFZpY2tpIFZhbGUuIiwicG9wdWxhcml0eSI6MzQuMTQ2LCJwb3N0ZXJfcGF0aCI6Ii90RGV4UXl1NkZXbHRjZDBWaEVESzd1aWI0MmYuanBnIiwicmVsZWFzZV9kYXRlIjoiMTk4OS0wNi0yMyIsInRpdGxlIjoiQmF0bWFuIiwidmlkZW8iOmZhbHNlLCJ2b3RlX2F2ZXJhZ2UiOjcuMiwidm90ZV9jb3VudCI6NTE1MX0seyJhZHVsdCI6ZmFsc2UsImJhY2tkcm9wX3BhdGgiOiIvbGg1bGJpc0Q0b0RiRUtnVXhvUmFaVThIVnJrLmpwZyIsImdlbnJlX2lkcyI6WzI4LDgwLDE4XSwiaWQiOjI3Miwib3JpZ2luYWxfbGFuZ3VhZ2UiOiJlbiIsIm9yaWdpbmFsX3RpdGxlIjoiQmF0bWFuIEJlZ2lucyIsIm92ZXJ2aWV3IjoiRHJpdmVuIGJ5IHRyYWdlZHksIGJpbGxpb25haXJlIEJydWNlIFdheW5lIGRlZGljYXRlcyBoaXMgbGlmZSB0byB1bmNvdmVyaW5nIGFuZCBkZWZlYXRpbmcgdGhlIGNvcnJ1cHRpb24gdGhhdCBwbGFndWVzIGhpcyBob21lLCBHb3RoYW0gQ2l0eS4gIFVuYWJsZSB0byB3b3JrIHdpdGhpbiB0aGUgc3lzdGVtLCBoZSBpbnN0ZWFkIGNyZWF0ZXMgYSBuZXcgaWRlbnRpdHksIGEgc3ltYm9sIG9mIGZlYXIgZm9yIHRoZSBjcmltaW5hbCB1bmRlcndvcmxkIC0gVGhlIEJhdG1hbi4iLCJwb3B1bGFyaXR5Ijo0My44MSwicG9zdGVyX3BhdGgiOiIvMVAzWnlFcTAyd2NUTWQzaUU0ZWJ0THZuY3ZILmpwZyIsInJlbGVhc2VfZGF0ZSI6IjIwMDUtMDYtMTAiLCJ0aXRsZSI6IkJhdG1hbiBCZWdpbnMiLCJ2aWRlbyI6ZmFsc2UsInZvdGVfYXZlcmFnZSI6Ny43LCJ2b3RlX2NvdW50IjoxNTI4NH0seyJhZHVsdCI6ZmFsc2UsImJhY2tkcm9wX3BhdGgiOiIvZWV2SnVZQWl0VWU2VndGTjI5YUZ3emV5ZVRyLmpwZyIsImdlbnJlX2lkcyI6WzgwLDE2LDk2NDgsMjhdLCJpZCI6NTM3MDU2LCJvcmlnaW5hbF9sYW5ndWFnZSI6ImVuIiwib3JpZ2luYWxfdGl0bGUiOiJCYXRtYW46IEh1c2giLCJvdmVydmlldyI6IkEgbXlzdGVyaW91cyBuZXcgdmlsbGFpbiBrbm93biBvbmx5IGFzIEh1c2ggdXNlcyBhIGdhbGxlcnkgb2YgdmlsbGFpbnMgdG8gZGVzdHJveSBCYXRtYW4ncyBjcmltZS1maWdodGluZyBjYXJlZXIgYXMgd2VsbCBhcyBCcnVjZSBXYXluZSdzIHBlcnNvbmFsIGxpZmUsIHdoaWNoIGhhcyBiZWVuIGZ1cnRoZXIgY29tcGxpY2F0ZWQgYnkgYSAgcmVsYXRpb25zaGlwIHdpdGggU2VsaW5hIEt5bGUvQ2F0d29tYW4uIiwicG9wdWxhcml0eSI6NDIuOTAyLCJwb3N0ZXJfcGF0aCI6Ii9laVZRT1JWeVZ1Tk5aSFBBRUx1V3RsWG9Rc0QuanBnIiwicmVsZWFzZV9kYXRlIjoiMjAxOS0wNy0xOSIsInRpdGxlIjoiQmF0bWFuOiBIdXNoIiwidmlkZW8iOmZhbHNlLCJ2b3RlX2F2ZXJhZ2UiOjcuMywidm90ZV9jb3VudCI6NDM2fSx7ImFkdWx0IjpmYWxzZSwiYmFja2Ryb3BfcGF0aCI6Ii90Z1BGWnhoRHV4V2Q0VlhZYXo4ZUFVem5HVEYuanBnIiwiZ2VucmVfaWRzIjpbODc4LDI4LDE0XSwiaWQiOjQxNSwib3JpZ2luYWxfbGFuZ3VhZ2UiOiJlbiIsIm9yaWdpbmFsX3RpdGxlIjoiQmF0bWFuICYgUm9iaW4iLCJvdmVydmlldyI6IkFsb25nIHdpdGggY3JpbWUtZmlnaHRpbmcgcGFydG5lciBSb2JpbiBhbmQgbmV3IHJlY3J1aXQgQmF0Z2lybCwgQmF0bWFuIGJhdHRsZXMgdGhlIGR1YWwgdGhyZWF0IG9mIGZyb3N0eSBnZW5pdXMgTXIuIEZyZWV6ZSBhbmQgaG9taWNpZGFsIGhvcnRpY3VsdHVyYWxpc3QgUG9pc29uIEl2eS4gRnJlZXplIHBsYW5zIHRvIHB1dCBHb3RoYW0gQ2l0eSBvbiBpY2UsIHdoaWxlIEl2eSB0cmllcyB0byBkcml2ZSBhIHdlZGdlIGJldHdlZW4gdGhlIGR5bmFtaWMgZHVvLiIsInBvcHVsYXJpdHkiOjI2LjMzNywicG9zdGVyX3BhdGgiOiIvYnNnMG1yeFVLeUpvTDRvU0dQNW1saEVzcXAuanBnIiwicmVsZWFzZV9kYXRlIjoiMTk5Ny0wNi0yMCIsInRpdGxlIjoiQmF0bWFuICYgUm9iaW4iLCJ2aWRlbyI6ZmFsc2UsInZvdGVfYXZlcmFnZSI6NC4zLCJ2b3RlX2NvdW50IjozNDgxfSx7ImFkdWx0IjpmYWxzZSwiYmFja2Ryb3BfcGF0aCI6Ii9tb1lmZDcwOVM4eG5iOE9kMnllRzVWQnQ5QnAuanBnIiwiZ2VucmVfaWRzIjpbMjgsMTRdLCJpZCI6MzY0LCJvcmlnaW5hbF9sYW5ndWFnZSI6ImVuIiwib3JpZ2luYWxfdGl0bGUiOiJCYXRtYW4gUmV0dXJucyIsIm92ZXJ2aWV3IjoiSGF2aW5nIGRlZmVhdGVkIHRoZSBKb2tlciwgQmF0bWFuIG5vdyBmYWNlcyB0aGUgUGVuZ3VpbuKAlGEgd2FycGVkIGFuZCBkZWZvcm1lZCBpbmRpdmlkdWFsIHdobyBpcyBpbnRlbnQgb24gYmVpbmcgYWNjZXB0ZWQgaW50byBHb3RoYW0gc29jaWV0eSwgd2l0aCB0aGUgaGVscCBvZiBNYXggU2NocmVjaywgYSBjcm9va2VkIGJ1c2luZXNzbWFuLCB3aG9tIGhlIGNvZXJjZXMgaW50byBoZWxwaW5nIGhpbSBydW4gZm9yIHRoZSBwb3NpdGlvbiBvZiBNYXlvciBvZiBHb3RoYW0sIHdoaWxlIHRoZXkgYm90aCBhdHRlbXB0IHRvIGZyYW1lIEJhdG1hbiBpbiBhIGRpZmZlcmVudCBsaWdodC4gQmF0bWFuIG11c3QgYXR0ZW1wdCB0byBjbGVhciBoaXMgbmFtZSwgYWxsIHdoaWxlIGFsc28gZGVjaWRpbmcganVzdCB3aGF0IG11c3QgYmUgZG9uZSB3aXRoIHRoZSBteXN0ZXJpb3VzIENhdHdvbWFuIHNsaW5raW5nIGFib3V0LiIsInBvcHVsYXJpdHkiOjI3LjkyNCwicG9zdGVyX3BhdGgiOiIvaktCamVYTTdpQkJWOVVrVWNPWHgzbTdGU0hZLmpwZyIsInJlbGVhc2VfZGF0ZSI6IjE5OTItMDYtMTkiLCJ0aXRsZSI6IkJhdG1hbiBSZXR1cm5zIiwidmlkZW8iOmZhbHNlLCJ2b3RlX2F2ZXJhZ2UiOjYuOCwidm90ZV9jb3VudCI6NDI5NX0seyJhZHVsdCI6ZmFsc2UsImJhY2tkcm9wX3BhdGgiOiIvc25sdTMyUm1qbGRGOWIwNjhVVVJKZzhzUXRuLmpwZyIsImdlbnJlX2lkcyI6WzI4LDgwLDE0XSwiaWQiOjQxNCwib3JpZ2luYWxfbGFuZ3VhZ2UiOiJlbiIsIm9yaWdpbmFsX3RpdGxlIjoiQmF0bWFuIEZvcmV2ZXIiLCJvdmVydmlldyI6IlRoZSBEYXJrIEtuaWdodCBvZiBHb3RoYW0gQ2l0eSBjb25mcm9udHMgYSBkYXN0YXJkbHkgZHVvOiBUd28tRmFjZSBhbmQgdGhlIFJpZGRsZXIuIEZvcm1lcmx5IERpc3RyaWN0IEF0dG9ybmV5IEhhcnZleSBEZW50LCBUd28tRmFjZSBiZWxpZXZlcyBCYXRtYW4gY2F1c2VkIHRoZSBjb3VydHJvb20gYWNjaWRlbnQgd2hpY2ggbGVmdCBoaW0gZGlzZmlndXJlZCBvbiBvbmUgc2lkZS4gQW5kIEVkd2FyZCBOeWdtYSwgY29tcHV0ZXItZ2VuaXVzIGFuZCBmb3JtZXIgZW1wbG95ZWUgb2YgbWlsbGlvbmFpcmUgQnJ1Y2UgV2F5bmUsIGlzIG91dCB0byBnZXQgdGhlIHBoaWxhbnRocm9waXN0OyBhcyBUaGUgUmlkZGxlci4gRm9ybWVyIGNpcmN1cyBhY3JvYmF0IERpY2sgR3JheXNvbiwgaGlzIGZhbWlseSBraWxsZWQgYnkgVHdvLUZhY2UsIGJlY29tZXMgV2F5bmUncyB3YXJkIGFuZCBCYXRtYW4ncyBuZXcgcGFydG5lciBSb2Jpbi4iLCJwb3B1bGFyaXR5IjoyNi4wMDQsInBvc3Rlcl9wYXRoIjoiL2s2RVEyT2V3empGOFRjUGdvazl3eHBQQWdYVy5qcGciLCJyZWxlYXNlX2RhdGUiOiIxOTk1LTA2LTE2IiwidGl0bGUiOiJCYXRtYW4gRm9yZXZlciIsInZpZGVvIjpmYWxzZSwidm90ZV9hdmVyYWdlIjo1LjQsInZvdGVfY291bnQiOjM1ODB9LHsiYWR1bHQiOmZhbHNlLCJiYWNrZHJvcF9wYXRoIjoiL2d3WE1CVkFzTHZOY1p1eldERXN3ZXhkcU5MYS5qcGciLCJnZW5yZV9pZHMiOlsxMDc1MSwxMiwzNSw4NzgsODBdLCJpZCI6MjY2MSwib3JpZ2luYWxfbGFuZ3VhZ2UiOiJlbiIsIm9yaWdpbmFsX3RpdGxlIjoiQmF0bWFuIiwib3ZlcnZpZXciOiJUaGUgRHluYW1pYyBEdW8gZmFjZXMgZm91ciBzdXBlci12aWxsYWlucyB3aG8gcGxhbiB0byBob2xkIHRoZSB3b3JsZCBmb3IgcmFuc29tIHdpdGggdGhlIGhlbHAgb2YgYSBzZWNyZXQgaW52ZW50aW9uIHRoYXQgaW5zdGFudGx5IGRlaHlkcmF0ZXMgcGVvcGxlLiIsInBvcHVsYXJpdHkiOjE1Ljk5NSwicG9zdGVyX3BhdGgiOiIvaUxDNWJnYzFOT3VYcGZCeHRiOHhFajZ0enZ1LmpwZyIsInJlbGVhc2VfZGF0ZSI6IjE5NjYtMDctMzAiLCJ0aXRsZSI6IkJhdG1hbiIsInZpZGVvIjpmYWxzZSwidm90ZV9hdmVyYWdlIjo2LjMsInZvdGVfY291bnQiOjUxN30seyJhZHVsdCI6ZmFsc2UsImJhY2tkcm9wX3BhdGgiOiIvMkpWblV0eVVLYlFtMTY1Y1hVRjlyNWlWUERvLmpwZyIsImdlbnJlX2lkcyI6WzI4LDEyLDE2LDg3OF0sImlkIjo0MDg2NDgsIm9yaWdpbmFsX2xhbmd1YWdlIjoiZW4iLCJvcmlnaW5hbF90aXRsZSI6IkJhdG1hbiBhbmQgSGFybGV5IFF1aW5uIiwib3ZlcnZpZXciOiJCYXRtYW4gYW5kIE5pZ2h0d2luZyBhcmUgZm9yY2VkIHRvIHRlYW0gd2l0aCB0aGUgSm9rZXIncyBzb21ldGltZXMtZ2lybGZyaWVuZCBIYXJsZXkgUXVpbm4gdG8gc3RvcCBhIGdsb2JhbCB0aHJlYXQgYnJvdWdodCBhYm91dCBieSBQb2lzb24gSXZ5IGFuZCBKYXNvbiBXb29kcnVlLCB0aGUgRmxvcm9uaWMgTWFuLiIsInBvcHVsYXJpdHkiOjI4LjIzNiwicG9zdGVyX3BhdGgiOiIvdVZkeG9EOWtuMjhxQzhWUWlWQTZVaWYxUUhsLmpwZyIsInJlbGVhc2VfZGF0ZSI6IjIwMTctMDgtMTQiLCJ0aXRsZSI6IkJhdG1hbiBhbmQgSGFybGV5IFF1aW5uIiwidmlkZW8iOmZhbHNlLCJ2b3RlX2F2ZXJhZ2UiOjYuMSwidm90ZV9jb3VudCI6Mzk5fSx7ImFkdWx0IjpmYWxzZSwiYmFja2Ryb3BfcGF0aCI6Ii84NTU5WERHaHhseG40UmFCQmR3Um9OcTlrMFAuanBnIiwiZ2VucmVfaWRzIjpbMjgsODAsMThdLCJpZCI6NDE0OTA2LCJvcmlnaW5hbF9sYW5ndWFnZSI6ImVuIiwib3JpZ2luYWxfdGl0bGUiOiJUaGUgQmF0bWFuIiwib3ZlcnZpZXciOiJJbiBoaXMgc2Vjb25kIHllYXIgb2YgY3JpbWUtZmlnaHRpbmcsIGJpbGxpb25haXJlIEJydWNlIFdheW5lLCBhbHNvIGtub3duIGFzIHRoZSBCYXRtYW4sIHRha2VzIG9uIGEgbXlzdGVyaW91cyBzZXJpYWwga2lsbGVyIGtub3duIGFzIHRoZSBSaWRkbGVyLiIsInBvcHVsYXJpdHkiOjIxLjY5LCJwb3N0ZXJfcGF0aCI6Ii95WU1HMnVUODdhdUd6dEk5YUtWekJCMnBIdksuanBnIiwicmVsZWFzZV9kYXRlIjoiMjAyMi0wMy0wMyIsInRpdGxlIjoiVGhlIEJhdG1hbiIsInZpZGVvIjpmYWxzZSwidm90ZV9hdmVyYWdlIjowLCJ2b3RlX2NvdW50IjowfSx7ImFkdWx0IjpmYWxzZSwiYmFja2Ryb3BfcGF0aCI6Ii9nMlhoWkpoRmlIY2N6V2NYRUVsZEl0RzUzZ2QuanBnIiwiZ2VucmVfaWRzIjpbMjgsMTIsMTZdLCJpZCI6MzIxNTI4LCJvcmlnaW5hbF9sYW5ndWFnZSI6ImVuIiwib3JpZ2luYWxfdGl0bGUiOiJCYXRtYW4gdnMuIFJvYmluIiwib3ZlcnZpZXciOiJEYW1pYW4gV2F5bmUgaXMgaGF2aW5nIGEgaGFyZCB0aW1lIGNvcGluZyB3aXRoIGhpcyBmYXRoZXIncyBcIm5vIGtpbGxpbmdcIiBydWxlLiBNZWFud2hpbGUsIEdvdGhhbSBpcyBnb2luZyB0aHJvdWdoIGhlbGwgd2l0aCB0aHJlYXRzIHN1Y2ggYXMgdGhlIGluc2FuZSBEb2xsbWFrZXIsIGFuZCB0aGUgc2VjcmV0aXZlIENvdXJ0IG9mIE93bHMuIiwicG9wdWxhcml0eSI6MjAuNTk1LCJwb3N0ZXJfcGF0aCI6Ii9hR3A5WERYbVZNNWxDS0hXdGdCQzE1UzdYTHIuanBnIiwicmVsZWFzZV9kYXRlIjoiMjAxNS0wNC0xNCIsInRpdGxlIjoiQmF0bWFuIHZzLiBSb2JpbiIsInZpZGVvIjpmYWxzZSwidm90ZV9hdmVyYWdlIjo3LjIsInZvdGVfY291bnQiOjU2MH0seyJhZHVsdCI6ZmFsc2UsImJhY2tkcm9wX3BhdGgiOiIvclNqRkhqRTRjQ08xZUNRM1ZON1ZSdTZaWXFoLmpwZyIsImdlbnJlX2lkcyI6WzE2LDI4LDEyXSwiaWQiOjI1MTUxOSwib3JpZ2luYWxfbGFuZ3VhZ2UiOiJlbiIsIm9yaWdpbmFsX3RpdGxlIjoiU29uIG9mIEJhdG1hbiIsIm92ZXJ2aWV3IjoiQmF0bWFuIGxlYXJucyB0aGF0IGhlIGhhcyBhIHZpb2xlbnQsIHVucnVseSBwcmUtdGVlbiBzb24gd2l0aCBUYWxpYSBhbCBHaHVsIG5hbWVkIERhbWlhbiBXYXluZSB3aG8gaXMgc2VjcmV0bHkgYmVpbmcgcmFpc2VkIGJ5IFJhJ3MgYWwgR2h1bCBhbmQgdGhlIExlYWd1ZSBvZiBBc3Nhc3NpbnMuIFdoZW4gUmEncyBhbCBHaHVsIGFwcGFyZW50bHkgZGllcyBhZnRlciBhIGJhdHRsZSB3aXRoIERlYXRoc3Ryb2tlLCBCYXRtYW4gbXVzdCB3b3JrIHRvIHN0b3AgaGlzIGxvbmctbG9zdCBzb24gZnJvbSB0YWtpbmcgcmV2ZW5nZSBhbmQgZ3VpZGluZyBoaW0gdG8gYSByaWdodGVvdXMgcGF0aCwgaW4gYWRkaXRpb24gdG8gdGhlIGNoYW5jZSBmb3IgdGhlIHBhaXIgdG8gdHJ1bHkgYWNrbm93bGVkZ2luZyBlYWNoIG90aGVyIGFzIGZhbWlseS4iLCJwb3B1bGFyaXR5IjoyMy40MDYsInBvc3Rlcl9wYXRoIjoiL3lIeDhPTFNLYzNWdElCQjVsSWU5MGMwZkhPWC5qcGciLCJyZWxlYXNlX2RhdGUiOiIyMDE0LTA1LTEzIiwidGl0bGUiOiJTb24gb2YgQmF0bWFuIiwidmlkZW8iOmZhbHNlLCJ2b3RlX2F2ZXJhZ2UiOjcsInZvdGVfY291bnQiOjY1Mn0seyJhZHVsdCI6ZmFsc2UsImJhY2tkcm9wX3BhdGgiOiIvY2pnUTBSVWRBaHp5a1BaeWNpZ29RbG1hS2x4LmpwZyIsImdlbnJlX2lkcyI6WzI4LDE2LDg3OF0sImlkIjozNjY5MjQsIm9yaWdpbmFsX2xhbmd1YWdlIjoiZW4iLCJvcmlnaW5hbF90aXRsZSI6IkJhdG1hbjogQmFkIEJsb29kIiwib3ZlcnZpZXciOiJCcnVjZSBXYXluZSBpcyBtaXNzaW5nLiBBbGZyZWQgY292ZXJzIGZvciBoaW0gd2hpbGUgTmlnaHR3aW5nIGFuZCBSb2JpbiBwYXRyb2wgR290aGFtIENpdHkgaW4gaGlzIHN0ZWFkIGFuZCBhIG5ldyBwbGF5ZXIsIEJhdHdvbWFuLCBpbnZlc3RpZ2F0ZXMgQmF0bWFuJ3MgZGlzYXBwZWFyYW5jZS4iLCJwb3B1bGFyaXR5IjoyNC4yOTMsInBvc3Rlcl9wYXRoIjoiL3I0bFZUaFVpWExSaVZyUk90NlJaVDQ5QmRqTi5qcGciLCJyZWxlYXNlX2RhdGUiOiIyMDE2LTAzLTIyIiwidGl0bGUiOiJCYXRtYW46IEJhZCBCbG9vZCIsInZpZGVvIjpmYWxzZSwidm90ZV9hdmVyYWdlIjo3LjEsInZvdGVfY291bnQiOjQ5OH0seyJhZHVsdCI6ZmFsc2UsImJhY2tkcm9wX3BhdGgiOiIvd055aHR4U2F6aFlWU0cxU284emdHVHFWRlZvLmpwZyIsImdlbnJlX2lkcyI6WzI4LDE2LDgwLDE4XSwiaWQiOjM4MjMyMiwib3JpZ2luYWxfbGFuZ3VhZ2UiOiJlbiIsIm9yaWdpbmFsX3RpdGxlIjoiQmF0bWFuOiBUaGUgS2lsbGluZyBKb2tlIiwib3ZlcnZpZXciOiJBcyBCYXRtYW4gaHVudHMgZm9yIHRoZSBlc2NhcGVkIEpva2VyLCB0aGUgQ2xvd24gUHJpbmNlIG9mIENyaW1lIGF0dGFja3MgdGhlIEdvcmRvbiBmYW1pbHkgdG8gcHJvdmUgYSBkaWFib2xpY2FsIHBvaW50IG1pcnJvcmluZyBoaXMgb3duIGZhbGwgaW50byBtYWRuZXNzLiIsInBvcHVsYXJpdHkiOjMyLjc2NiwicG9zdGVyX3BhdGgiOiIvbnhuY0FBTDFGVUt0UVdzNHVoczVqZjFNVnV0LmpwZyIsInJlbGVhc2VfZGF0ZSI6IjIwMTYtMDctMjQiLCJ0aXRsZSI6IkJhdG1hbjogVGhlIEtpbGxpbmcgSm9rZSIsInZpZGVvIjpmYWxzZSwidm90ZV9hdmVyYWdlIjo2LjYsInZvdGVfY291bnQiOjEyMTF9LHsiYWR1bHQiOmZhbHNlLCJiYWNrZHJvcF9wYXRoIjoiL2pxbmJhYzNvaW5kNVZPY0FOMG1UWHlhcE9HaC5qcGciLCJnZW5yZV9pZHMiOlsyOCwxNiwzNSwxMDc1MSwxNF0sImlkIjozMjQ4NDksIm9yaWdpbmFsX2xhbmd1YWdlIjoiZW4iLCJvcmlnaW5hbF90aXRsZSI6IlRoZSBMZWdvIEJhdG1hbiBNb3ZpZSIsIm92ZXJ2aWV3IjoiQSBjb29sZXItdGhhbi1ldmVyIEJydWNlIFdheW5lIG11c3QgZGVhbCB3aXRoIHRoZSB1c3VhbCBzdXNwZWN0cyBhcyB0aGV5IHBsYW4gdG8gcnVsZSBHb3RoYW0gQ2l0eSwgd2hpbGUgZGlzY292ZXJpbmcgdGhhdCBoZSBoYXMgYWNjaWRlbnRhbGx5IGFkb3B0ZWQgYSB0ZWVuYWdlIG9ycGhhbiB3aG8gd2lzaGVzIHRvIGJlY29tZSBoaXMgc2lkZWtpY2suIiwicG9wdWxhcml0eSI6MjkuMTk0LCJwb3N0ZXJfcGF0aCI6Ii9zbkd3cjJnYWc0RmNneDJPR21IOW90bDZvZlcuanBnIiwicmVsZWFzZV9kYXRlIjoiMjAxNy0wMi0wOCIsInRpdGxlIjoiVGhlIExlZ28gQmF0bWFuIE1vdmllIiwidmlkZW8iOmZhbHNlLCJ2b3RlX2F2ZXJhZ2UiOjcuMiwidm90ZV9jb3VudCI6MzU1OX0seyJhZHVsdCI6ZmFsc2UsImJhY2tkcm9wX3BhdGgiOiIvb2x3SU5jZmZ6RFJ0OE1NQ2FtbHB0RDNIYmpqLmpwZyIsImdlbnJlX2lkcyI6WzI4LDE2LDM1XSwiaWQiOjQ2NDg4Miwib3JpZ2luYWxfbGFuZ3VhZ2UiOiJlbiIsIm9yaWdpbmFsX3RpdGxlIjoiQmF0bWFuIHZzLiBUd28tRmFjZSIsIm92ZXJ2aWV3IjoiRm9ybWVyIEdvdGhhbSBDaXR5IERpc3RyaWN0IEF0dG9ybmV5IEhhcnZleSBEZW50LCBvbmUgc2lkZSBvZiBoaXMgZmFjZSBzY2FycmVkIGJ5IGFjaWQsIGdvZXMgb24gYSBjcmltZSBzcHJlZSBiYXNlZCBvbiB0aGUgbnVtYmVyICcyJy4gQWxsIG9mIGhpcyBhY3Rpb25zIGFyZSBkZWNpZGVkIGJ5IHRoZSBmbGlwIG9mIGEgZGVmYWNlZCwgdHdvLWhlYWRlZCBzaWx2ZXIgZG9sbGFyLiIsInBvcHVsYXJpdHkiOjE3LjQ5NiwicG9zdGVyX3BhdGgiOiIveVRiajhLY3A0V0Z3TVJkRWVqbm41NUtJc2ZILmpwZyIsInJlbGVhc2VfZGF0ZSI6IjIwMTctMTEtMTQiLCJ0aXRsZSI6IkJhdG1hbiB2cy4gVHdvLUZhY2UiLCJ2aWRlbyI6ZmFsc2UsInZvdGVfYXZlcmFnZSI6Ni4yLCJ2b3RlX2NvdW50IjoxMDJ9LHsiYWR1bHQiOmZhbHNlLCJiYWNrZHJvcF9wYXRoIjoiL2RvaVV0T0h6Y3hYRmwwR1ZRMm44QXk2UGlyeC5qcGciLCJnZW5yZV9pZHMiOlsyOCwxMiwxNF0sImlkIjoyMDkxMTIsIm9yaWdpbmFsX2xhbmd1YWdlIjoiZW4iLCJvcmlnaW5hbF90aXRsZSI6IkJhdG1hbiB2IFN1cGVybWFuOiBEYXduIG9mIEp1c3RpY2UiLCJvdmVydmlldyI6IkZlYXJpbmcgdGhlIGFjdGlvbnMgb2YgYSBnb2QtbGlrZSBTdXBlciBIZXJvIGxlZnQgdW5jaGVja2VkLCBHb3RoYW0gQ2l0eeKAmXMgb3duIGZvcm1pZGFibGUsIGZvcmNlZnVsIHZpZ2lsYW50ZSB0YWtlcyBvbiBNZXRyb3BvbGlz4oCZcyBtb3N0IHJldmVyZWQsIG1vZGVybi1kYXkgc2F2aW9yLCB3aGlsZSB0aGUgd29ybGQgd3Jlc3RsZXMgd2l0aCB3aGF0IHNvcnQgb2YgaGVybyBpdCByZWFsbHkgbmVlZHMuIEFuZCB3aXRoIEJhdG1hbiBhbmQgU3VwZXJtYW4gYXQgd2FyIHdpdGggb25lIGFub3RoZXIsIGEgbmV3IHRocmVhdCBxdWlja2x5IGFyaXNlcywgcHV0dGluZyBtYW5raW5kIGluIGdyZWF0ZXIgZGFuZ2VyIHRoYW4gaXTigJlzIGV2ZXIga25vd24gYmVmb3JlLiIsInBvcHVsYXJpdHkiOjUwLjIwMiwicG9zdGVyX3BhdGgiOiIvNVVzSzNnckp2dFFydHpFZ3FObERsakpXOTZ3LmpwZyIsInJlbGVhc2VfZGF0ZSI6IjIwMTYtMDMtMjMiLCJ0aXRsZSI6IkJhdG1hbiB2IFN1cGVybWFuOiBEYXduIG9mIEp1c3RpY2UiLCJ2aWRlbyI6ZmFsc2UsInZvdGVfYXZlcmFnZSI6NS45LCJ2b3RlX2NvdW50IjoxNDA0OX0seyJhZHVsdCI6ZmFsc2UsImJhY2tkcm9wX3BhdGgiOm51bGwsImdlbnJlX2lkcyI6WzE4XSwiaWQiOjE0ODkxOCwib3JpZ2luYWxfbGFuZ3VhZ2UiOiJybyIsIm9yaWdpbmFsX3RpdGxlIjoiU3VwZXJtYW4sIFNwaWRlcm1hbiBzYXUgQmF0bWFuIiwib3ZlcnZpZXciOiJBcm9uLCBhIDUteWVhci1vbGQgYm95LCBzZXRzIHRvZ2V0aGVyIHdpdGggaGlzIHdvcnJpZWQgZmF0aGVyIG9uIGEgam91cm5leSBhdCB0aGUgZW5kIG9mIHdoaWNoIGhlIHdpc2hlcywgbGlrZSB0aGUgc3VwZXJoZXJvZXMgaW4gdGhlIGNvbWljIGJvb2tzLCB0byBzYXZlIGhpcyBtb3RoZXIgc3VmZmVyaW5nIGZyb20gYSBoZWFydCBjb25kaXRpb24uIiwicG9wdWxhcml0eSI6MjAuMDA2LCJwb3N0ZXJfcGF0aCI6Ii9pVXA4NXM1czdlYVBidUNVTnFPQ2VKQ0VWcFkuanBnIiwicmVsZWFzZV9kYXRlIjoiMjAxMS0wNi0wMSIsInRpdGxlIjoiU3VwZXJtYW4sIFNwaWRlcm1hbiBvciBCYXRtYW4iLCJ2aWRlbyI6ZmFsc2UsInZvdGVfYXZlcmFnZSI6OC4xLCJ2b3RlX2NvdW50Ijo4fSx7ImFkdWx0IjpmYWxzZSwiYmFja2Ryb3BfcGF0aCI6Ii85b2pKQjd2WlIydURxWGR4T3pZYUFEdGhFQlQuanBnIiwiZ2VucmVfaWRzIjpbNTMsMjgsMTYsODc4XSwiaWQiOjQ3MTQ3NCwib3JpZ2luYWxfbGFuZ3VhZ2UiOiJlbiIsIm9yaWdpbmFsX3RpdGxlIjoiQmF0bWFuOiBHb3RoYW0gYnkgR2FzbGlnaHQiLCJvdmVydmlldyI6IkluIGFuIGFsdGVybmF0aXZlIFZpY3RvcmlhbiBBZ2UgR290aGFtIENpdHksIEJhdG1hbiBiZWdpbnMgaGlzIHdhciBvbiBjcmltZSB3aGlsZSBoZSBpbnZlc3RpZ2F0ZXMgYSBuZXcgc2VyaWVzIG9mIG11cmRlcnMgYnkgSmFjayB0aGUgUmlwcGVyLiIsInBvcHVsYXJpdHkiOjI2LjE2MSwicG9zdGVyX3BhdGgiOiIvN3NvdUxpNXpxUUNucFpWZ2hhWHYwV293aTB5LmpwZyIsInJlbGVhc2VfZGF0ZSI6IjIwMTgtMDEtMTIiLCJ0aXRsZSI6IkJhdG1hbjogR290aGFtIGJ5IEdhc2xpZ2h0IiwidmlkZW8iOmZhbHNlLCJ2b3RlX2F2ZXJhZ2UiOjYuNiwidm90ZV9jb3VudCI6NDMxfSx7ImFkdWx0IjpmYWxzZSwiYmFja2Ryb3BfcGF0aCI6Ii9xOXZIcHpRR3psVTFkYTNjcndNTHlhVEY5emIuanBnIiwiZ2VucmVfaWRzIjpbMTYsMTA3NTFdLCJpZCI6NjAyMzA3LCJvcmlnaW5hbF9sYW5ndWFnZSI6ImVuIiwib3JpZ2luYWxfdGl0bGUiOiJMZWdvIERDIEJhdG1hbjogRmFtaWx5IE1hdHRlcnMiLCJvdmVydmlldyI6IlN1c3BpY2lvbiBpcyBvbiBoaWdoIGFmdGVyIEJhdG1hbiwgQmF0Z2lybCwgUm9iaW4gYW5kIG90aGVyIERDIHN1cGVyaGVyb2VzIHJlY2VpdmUgbXlzdGVyaW91cyBpbnZpdGF0aW9ucy4gSG93ZXZlciwgZmFtaWx5IHZhbHVlcyBtdXN0IHJlbWFpbiBzdHJvbmcgd2hlbiBCYXRtYW4gYW5kIGhpcyB0ZWFtIGVuY291bnRlciB0aGUgdmlsbGFpbm91cyBSZWQgSG9vZCwgd2hvIGlzIG9ic2Vzc2VkIHdpdGggZGVzdHJveWluZyB0aGUgQmF0LWZhbWlseSBhbmQgYWxsIG9mIEdvdGhhbSBDaXR5LiIsInBvcHVsYXJpdHkiOjMwLjMwMiwicG9zdGVyX3BhdGgiOiIvckE1YmR3YnpFQUtmdmpIUnp6YTZRM3Iwb3RxLmpwZyIsInJlbGVhc2VfZGF0ZSI6IjIwMTktMDctMjEiLCJ0aXRsZSI6IkxlZ28gREMgQmF0bWFuOiBGYW1pbHkgTWF0dGVycyIsInZpZGVvIjpmYWxzZSwidm90ZV9hdmVyYWdlIjo3LjEsInZvdGVfY291bnQiOjY1fV0sInRvdGFsX3BhZ2VzIjo2LCJ0b3RhbF9yZXN1bHRzIjoxMTV9
  recorded_at: Wed, 09 Dec 2020 23:40:39 GMT
- request:
    method: get
    uri: https://api.themoviedb.org/3/search/movie?api_key=Not an API Key&include_adult=false&language=en-US&page=2&query=batman
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v1.0.1
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Wed, 09 Dec 2020 23:40:38 GMT
      Server:
      - openresty
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Allow-Methods:
      - GET, HEAD, POST, PUT, DELETE, OPTIONS
      Access-Control-Expose-Headers:
      - ETag, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, Retry-After,
        Content-Length, Content-Range
      Cache-Control:
      - public, max-age=600
      Vary:
      - Accept-Encoding
      X-Cache:
      - Hit from cloudfront
      Via:
      - 1.1 2c861897aa9389c1f47299b6fea5b59d.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - DEN50-C2
      X-Amz-Cf-Id:
      - L0lxtNuOtSqCddf7bwCRQmKsfeuj_S68xsYhl9BZ395Gj-xG1urliQ==
      Age:
      - '1'
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Wed, 09 Dec 2020 23:40:39 GMT
recorded_with: VCR 6.0.0
